generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Organization {
//   id    String    @default(uuid()) @id
//   createdAt DateTime    @default(now()) 
//   updatedAt DateTime    @default(now()) 
//   title String
//   description String?
//   logo String?
//   user User[]
// }

model Session {
  access_token          String
  createdAt             DateTime @default(now())
  updatedAt DateTime    @default(now()) 
  device                String?
  device_info           String?
  id                    String   @id @default(uuid())
  id_token              String
  ip                    String?
  isAlive               Boolean
  refresh_token         String
  refresh_token_expires String?
  userId                String
  user                  User     @relation(fields: [userId], references: [id])
}

{{#each model}}
model {{{this.name}}} {
    id    String    @default(uuid()) @id
    createdAt DateTime    @default(now()) 
    updatedAt DateTime    @default(now())
    {{#if this.options.softDelete}} 
    deletedAt DateTime?
    {{this.options.softDelete}} Boolean  @default(false)
    {{/if}}
  {{#each this.fields}}
    {{{this.id}}} {{{this.type}}}{{#if this.options.optional}}?{{/if}}  {{#if this.options.unique}}@unique{{/if}} {{#if this.options.default}} @default({{{this.options.default}}}) {{/if}}
  {{/each}}
  {{#each this.parents}}
    {{{this.id}}}Id String{{#if this.options.optional}}?{{/if}}
    {{{this.id}}}  {{this.name}}{{#if this.options.optional}}?{{/if}}  @relation({{#if this.options.namedRelation}}"{{{this.id}}}", {{/if}}fields: [{{this.id}}Id], references: [id])
  {{/each}}
  {{#each this.children}}
    {{#if this.options.namedRelation}}{{{this.options.namedRelation}}} {{this.name}}[] @relation("{{{this.id}}}"){{else}}{{{this.id}}} {{this.name}}[]{{/if}}
  {{/each}}
}

{{/each}}

{{#each enums}}
  enum {{{this.name}}} {
    {{#each this.values}}
      {{{this}}}
    {{/each}}
  }
{{/each}}


